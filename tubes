selection sort 
#include<iostream>
using namespace std;
void selectionsort(int A[],int n)
{
	for(int i = 0;i < n - 1;i++)
	{
		int imin = i;
		for(int j = j+1;j<n;j++)
		{
			if(A[j] < A[min])
			{
				imin = j;
			}
		}
		int temp = A[i];
		A[i] = A[imin];
		A[imin] = temp;
	}
}

bubble sort 
import time
start_time = time.time() 

# Python program for implementation of Bubble Sort 

def bubbleSort(arr):
    n = len(arr) 
  
    # Traverse through all array elements 
    for i in range(n-1): 
    # range(n) also work but outer loop will repeat one time more than needed. 
  
        # Last i elements are already in place 
        for j in range(0, n-i-1): 
  
            # traverse the array from 0 to n-i-1 
            # Swap if the element found is greater 
            # than the next element 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
  
# Driver code to test above 
arr = [1, 22, 21, 19, 12, 9, 6, 10] 
  
bubbleSort(arr) 
print ("Sorted array is:") 
for i in range(len(arr)): 
    print ("%d" %arr[i]), 

print (time.time() - start_time, "detik")
